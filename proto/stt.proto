syntax = "proto3";

package SpeechToText;

// The Listener service definition.
service Listener {
  rpc DoConfig (ConfigSTT) returns (ConfigResult) {}
  rpc DoSpeechToText (stream SpeechChunk) returns (stream TranscriptChunk) {}
}

// speech config (fields are optional by default in proto3)
message ConfigSTT {
	repeated string asrs = 1;
	string encoding = 2;
	int32 sampling_rate = 3;
	string language = 4;
	int32 max_alternatives = 5;
	bool profanity_filter = 6;
	bool interim_results = 7;
	bool continuous = 8;
	int32 chunksize = 9;
	int32 inactivity = 10;
}

// config result
message ConfigResult {
	bool status = 1;
	ConfigSTT config = 2;
}


// audio chunk
message SpeechChunk {
  bytes content = 1;
  string token = 2;
  ConfigSTT config = 3;
}


// response
message TranscriptChunk {
	string asr = 1;
	string transcript = 2;
	bool is_final = 3;
	float confidence = 4;
}
