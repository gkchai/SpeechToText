syntax = "proto3";

package proxyASR;

// The Listener service definition.
service Listener {
  rpc DoConfig (ConfigSpeech) returns (ConfigResult) {}
  rpc DoChunkStream (stream StreamChunk) returns (stream ResponseStream) {}
}

// speech config (fields are optional by default in proto3)
message ConfigSpeech {
	repeated string asr = 1;
	string encoding = 2;
	int32 rate = 3;
	string language = 4;
	int32 max_alternatives = 5;
	bool profanity_filter = 6;
	bool interim_results = 7;
	bool continuous = 8;
}

// config result
message ConfigResult {
	bool status = 1;
	ConfigSpeech streamingConfig = 2;
}


// audio chunk
message StreamChunk {
  bytes content = 1;
  string token = 2;
  ConfigSpeech streamingConfig = 3;
}


// response
message ResponseStream {
	string asr = 1;
	string transcript = 2;
	bool is_final = 3;
	float confidence = 4;
}

